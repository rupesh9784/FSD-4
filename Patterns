//L001

//p1
class Solution {

    void printSquare(int n) {
        // code here
        for(int row = 1; row<=n; row++){
            
            for(int j = 1; j<=n; j++){
                System.out.print("* ");
            }
            
            //next line
            System.out.println();
        }
        
    }
}

//p2
class Solution {

    void printTriangle(int n) {
        // code here
        int nst = 1;
        for(int i = 1; i<=n; i++){
            //star
            for(int j = 1; j<=nst; j++){
                System.out.print("* ");
            }
            
            //next line
            System.out.println();
            nst = nst+1;
        }
    }
}

//p3
class Solution {

    void printTriangle(int n) {
        // code here
       int nst = 1;
       for(int i=1; i<=n; i++){
           int val = 1;
           for(int j =1; j<=nst; j++){
               System.out.print(val+" ");
               val++;
           }
           
           //next line
           System.out.println();
           nst = nst+1;  // nst += 1;
           
       }
    }
}
*********************************
//L002
//p4
class Solution {

    void printTriangle(int n) {
        // code here
        int nst = 1;
        int val =1;
        for(int i = 1; i<=n; i++){
            for(int j =1; j<=nst; j++){
                System.out.print(val+" ");
            }
            //nextLine
            System.out.println();
            nst++;
            val++;
        }
    }
}

//staircase
public static void staircase(int n) {
    // Write your code here
       int nsp = n-1 , nst  =1;
       for(int i = 1; i<=n; i++){
           //space
           for(int j =1; j<=nsp; j++){
               System.out.print(" ");
           }
           
           //star
           for(int j =1; j<=nst; j++){
               System.out.print("#");
           }
           //next line
           System.out.println();
           nsp--;
           nst++;
           
       }
    }
    
    //p5
     void printTriangle(int n) {
        // code here
        int nst = n;
        for(int i =1; i<=n; i++){
            
            for(int j =1; j<=nst; j++){
                System.out.print("* ");
            }
            
            //next line
            System.out.println();
            nst--;
        }
    }
    
    //p6
     void printTriangle(int n) {
        int nst = n;
        for(int i =1; i<=n; i++){
            int val = 1;
            for(int j =1; j<=nst; j++){
                System.out.print(val+" ");
                val++;
            }
            
            //next line
            System.out.println();
            nst--;
        }
    }
    //p7
    class Solution {

    void printTriangle(int n) {
        int nsp = n-1, nst = 1;
        
        //row
        for(int i =1; i<=n; i++){
            //space
            for(int j = 1; j<=nsp; j++){
                System.out.print(" ");
            }
            //star
            for(int j = 1; j<=nst; j++){
                System.out.print("*");
            }
            //next line
            System.out.println();
            nsp--;
            nst+=2;
            
        }
    }
}

//p8

class Solution {

    void printTriangle(int n) {
        // code here
        int nsp  =0, nst = 2*n-1;
        for(int i =1; i<=n; i++){
           //space
         for(int j =1; j<=nsp; j++){
             System.out.print(" ");
         }
         //star
         for(int j =1; j<=nst; j++){
             System.out.print("*");
         }
         //next line
         System.out.println();
         nsp++;
         nst = nst -2;
        }
    }
}
****************************************************
//L003
//p9
class Solution {

    void printDiamond(int n) {
        // Your code here
        int nsp = n-1, nst = 1;
        for(int i =1; i<=2*n; i++){
            //space
            for(int j = 1; j<=nsp; j++){
                System.out.print(" ");
            }
            //star
            for(int j = 1; j<=nst; j++){
                System.out.print("* ");
            }
            //next line
            System.out.println();
            if(i<n){
                nsp--;
                nst++;
            }
            if(i>n){
                nsp++;
                nst--;
            }
            
        }
        
    }
}

//p10
class Solution {

    void printTriangle(int n) {
        int nst = 1;
        for(int i =1; i<=2*n-1; i++){
            for(int j =1; j<=nst; j++){
                System.out.print("* ");
            }
            System.out.println();
            if(i<n) nst++;
            else nst--;
        }
    }
}

//p11
class Solution {

    void printTriangle(int n) {
        // code here
       
        int sp =1;
        for(int i =1; i<=n; i++){
            int val = sp;
            for(int j = 1; j<=i; j++){
                System.out.print(val+" ");
                if(val==1) val = 0;
                else val = 1;
            }
            //next line
            System.out.println();
            if(sp == 1) sp = 0;
            else sp = 1;
        }
    }
}

******************************************************
//L004
//p12
void printTriangle(int n) {
        // code here
        int nsp = 2*n-2;
        for(int row = 1; row<=n; row++){
            //star
            int val = 1;
            for(int c = 1; c<=row; c++){
                System.out.print(val+" ");
                val++;
            }
            //space
            for(int c = 1; c<=nsp; c++){
                System.out.print("  ");
            }
            
            //sart
            for(int c = 1; c<=row; c++){
                val--;
                System.out.print(val+" ");
            }
            //next line
            System.out.println();
            nsp = nsp - 2;
            
            
        }
    }

//p13
 void printTriangle(int n) {
        int val = 1;
        for(int i = 1; i<=n; i++){
            for(int j = 1; j<=i; j++){
                System.out.print(val+" ");
                val++;
            }
            System.out.println();
        }
    }

//p14
 void printTriangle(int n) {
        // code here
        for(int i = 1; i<=n; i++){
         char ch = 'A';
            for(int j = 1; j<=i; j++){
                System.out.print(ch);
                ch++;
            }
            System.out.println();
        }
    }

//p15
void printTriangle(int n) {
        // code here
        int nst = n;
        for(int i = n; i>=1; i--){
            char ch = 'A';
            for(int j = 1; j<=nst; j++){
                System.out.print(ch);
                ch++;
            }
            //next row
            System.out.println();
            nst--;
        }
    }

*************************************************************
//L005

//diamond star pattern
import java.util.Scanner;

public class First {
    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int nsp = n/2, nst  =1;
		for(int row = 1; row<=n; row++){
		    //space
		    for(int j =1; j<=nsp; j++){
		        System.out.print("  ");
		    }
		    //star
		    for(int j =1; j<=nst; j++){
		        System.out.print("* ");
		    }
		    //next row
		    System.out.println();
          
		    if(row<=n/2){
		        nsp--;
		        nst = nst +2;
		    } else {
		        nsp++;
		        nst = nst - 2;
		    }
		    
		}
    }

}



//pattern diamond
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int nsp = n/2, nst  =1;
        int sp = 1;
		for(int row = 1; row<=n; row++){
		    //space
            int val = sp;
		    for(int j =1; j<=nsp; j++){
		        System.out.print("  ");
		    }
		    //star
		    for(int j =1; j<=nst; j++){
		        System.out.print(val+" ");
                if(j<=nst/2) val++;
                else val--;
		    }
		    //next row
		    System.out.println();
          
		    if(row<=n/2){
                sp++;
		        nsp--;
		        nst = nst +2;
		    } else {
                sp--;
		        nsp++;
		        nst = nst - 2;
		    }
		    
		}
    }
}

